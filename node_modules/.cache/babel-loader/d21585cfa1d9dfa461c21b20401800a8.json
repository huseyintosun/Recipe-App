{"ast":null,"code":"var _jsxFileName = \"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Recipe-App/src/pages/details/Details.js\";\nimport React from \"react\";\nimport { DetailContainer, DetailPart, ImgContainer, HeaderContainer, IngContainer, OtherPart } from \"./style\";\nimport dietSvg from \"../../assets/diet.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  console.log('props:', props); // console.log(props.location.recipe);\n\n  const recipe = props.location.recipe;\n  return /*#__PURE__*/_jsxDEV(DetailContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dietSvg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DetailPart, {\n      children: [/*#__PURE__*/_jsxDEV(OtherPart, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Nutrients\"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CA.label, \" :\", \" \", Math.round(recipe.totalNutrients.CA.quantity), recipe.totalNutrients.CA.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CHOCDF.label, \" :\", \" \", Math.round(recipe.totalNutrients.CHOCDF.quantity), recipe.totalNutrients.CHOCDF.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.CHOLE.label, \" :\", \" \", Math.round(recipe.totalNutrients.CHOLE.quantity), recipe.totalNutrients.CHOLE.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.totalNutrients.ENERC_KCAL.label, \" :\", \" \", Math.round(recipe.totalNutrients.ENERC_KCAL.quantity), recipe.totalNutrients.ENERC_KCAL.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.totalWeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Calories: \", Math.round(recipe.calories)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), recipe.digest.slice(0, 4).map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.label, \" : \", Math.round(item.total)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngContainer, {\n        children: recipe.ingredientLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [index + 1, \" - \", line]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Recipe-App/src/pages/details/Details.js"],"names":["React","DetailContainer","DetailPart","ImgContainer","HeaderContainer","IngContainer","OtherPart","Details","props","console","log","recipe","location","label","dietSvg","totalNutrients","CA","Math","round","quantity","unit","CHOCDF","CHOLE","ENERC_KCAL","totalWeight","calories","digest","slice","map","item","index","total","image","ingredientLines","line"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  DetailContainer,\n  DetailPart,\n  ImgContainer,\n  HeaderContainer,\n  IngContainer,\n  OtherPart,\n} from \"./style\";\nimport dietSvg from \"../../assets/diet.svg\";\nconst Details = (props) => {\n  console.log('props:', props);\n  // console.log(props.location.recipe);\n  const recipe = props.location.recipe;\n  return (\n    <DetailContainer>\n      <HeaderContainer>\n        <h1>{recipe.label}</h1>\n        <img src={dietSvg} alt=\"\" />\n      </HeaderContainer>\n      <DetailPart>\n        <OtherPart>\n          <>Nutrients</>\n          <p>\n            {recipe.totalNutrients.CA.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.CA.quantity)}\n            {recipe.totalNutrients.CA.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.CHOCDF.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.CHOCDF.quantity)}\n            {recipe.totalNutrients.CHOCDF.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.CHOLE.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.CHOLE.quantity)}\n            {recipe.totalNutrients.CHOLE.unit}\n          </p>\n          <p>\n            {recipe.totalNutrients.ENERC_KCAL.label} :{\" \"}\n            {Math.round(recipe.totalNutrients.ENERC_KCAL.quantity)}\n            {recipe.totalNutrients.ENERC_KCAL.unit}\n          </p>\n          <p>{recipe.totalWeight}</p>\n          <p>Calories: {Math.round(recipe.calories)}</p>\n          {recipe.digest.slice(0, 4).map((item, index) => (\n            <p key={index}>\n              {item.label} : {Math.round(item.total)}\n            </p>\n          ))}\n        </OtherPart>\n        <ImgContainer>\n          <img src={recipe.image} alt={recipe.label} />\n        </ImgContainer>\n        <IngContainer>\n          {recipe.ingredientLines.map((line, index) => (\n            <div key={index}>\n              <p>\n                {index + 1} - {line}\n              </p>\n              <br />\n            </div>\n          ))}\n        </IngContainer>\n      </DetailPart>\n    </DetailContainer>\n  );\n};\nexport default Details;\n\n"]},"metadata":{},"sourceType":"module"}