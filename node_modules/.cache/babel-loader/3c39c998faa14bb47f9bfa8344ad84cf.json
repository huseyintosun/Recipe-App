{"ast":null,"code":"var _jsxFileName = \"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Recipe-App/src/router/PrivateRouter.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRouter = ({\n  component: Component,\n  isAuth,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRouter;\nexport default PrivateRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouter\");","map":{"version":3,"sources":["/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Recipe-App/src/router/PrivateRouter.js"],"names":["React","Redirect","Route","PrivateRouter","component","Component","isAuth","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,MAAxB;AAAgC,KAAGC;AAAnC,CAAD,KAA+C;AACnE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNF,MAAM,gBACJ,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;KAAMT,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nconst PrivateRouter = ({ component: Component, isAuth, ...rest }) => { \n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRouter;"]},"metadata":{},"sourceType":"module"}